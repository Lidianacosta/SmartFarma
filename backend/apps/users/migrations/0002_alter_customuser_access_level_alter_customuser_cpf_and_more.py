# Generated by Django 5.1.1 on 2024-10-12 01:50

import django.core.validators
import users.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='customuser',
            name='access_level',
            field=models.CharField(choices=[('C', 'Cliente'), ('G', 'Gerente'), ('F', 'Funcionário')], max_length=1, verbose_name='acess_level'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='cpf',
            field=models.CharField(max_length=11, unique=True, validators=[users.validators.valid_cpf_validator, django.core.validators.RegexValidator(message='O CPF de conter 11 números', regex='^[0-9]{11}$'), django.core.validators.MinLengthValidator(11)], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='date_of_birth',
            field=models.DateField(validators=[users.validators.legal_age_validator], verbose_name='date of birth'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='email',
            field=models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message="Número de telefone deve estar no formato: 'DDD9XXXXXXXX'", regex='^[a-zA-Z0-9._]+@[a-z]+\\.com$')], verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='name',
            field=models.CharField(max_length=150, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator(message='O nome deve conter apenas letras', regex='^[a-zá-ùA-ZÁ-Ù]+(?:[\\s][a-zá-ùA-ZÁ-Ù]+)+$')], verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='phone_number',
            field=models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message="Número de telefone deve conter apenas e estar no formato: 'DDD9XXXXXXXX'", regex='^[0-9]{11}$'), django.core.validators.MinLengthValidator(11)], verbose_name='phone number'),
        ),
    ]
